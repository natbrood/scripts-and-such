# Solution from a guy on the Discord server

import cv2
from zipfile import ZipFile


morse_dict = {'..-': 'U', '--..--': ', ', '....-': '4', '.....': '5', '-...': 'B', '-..-': 'X', '.-.': 'R', '--.-': 'Q', '--..': 'Z', '.--': 'W', '-..-.': '/', '..---': '2', '.-': 'A', '..': 'I', '-.-.': 'C', '..-.': 'F', '---': 'O', '-.--': 'Y', '-': 'T', '.': 'E', '.-..': 'L', '...': 'S', '-.--.-': ')', '..--..': '?', '.----': '1', '-----': '0', '-.-': 'K', '-..': 'D', '----.': '9', '-....': '6', '.---': 'J', '.--.': 'P', '.-.-.-': '.', '-.--.': '(', '--': 'M', '-.': 'N', '....': 'H', '---..': '8', '...-': 'V', '--...': '7', '--.': 'G', '...--': '3', '-....-': '-'}


def parse_morse():
    img = cv2.imread('flag/pwd.png')
    empty = img[0][0][0]
    password = ''
    for x in range(1, len(img), 2):
        code = ''
        sum = 0
        for y in range(len(img[0])):
            if empty != img[x][y][0]:
                sum += 1
            elif sum > 0:
                code += '-' if sum == 3 else '.'
                sum = 0

        password += morse_dict[code]
    return password


def decrypt(index, password):
    with ZipFile('flag/flag_' + str(index) + '.zip') as f:
        f.extractall(pwd=password)


for x in range(0, 999)[::-1]:
    password = parse_morse().lower()
    print('File: {}\tPassword: {}'.format(x, password))

    decrypt(x, password)
